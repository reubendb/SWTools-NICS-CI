#!/bin/ksh

############################## standard interface to /sw tools
# Input:
#   Environment variables
#     SW_BLDDIR    current directory (PWD) minus /autofs/na1_ stuff
#     SW_ENVFILE   file to be sourced which has alternate prog environment
#                     only to be used in special circumstances
#     SW_WORKDIR   work dir that local script can use
# Output:
#   Return code of 0=success or 1=failure   or 2=job submitted
#
# Notes:
#   If this script is called from swtest, then swtest requires 
#   SW_WORKDIR to be set.  Then swtest adds a unique path to what 
#   user gave swtest (action+timestamp+build) and provides this
#   script with a uniquely valued SW_WORKDIR.  swtest will
#   automatically remove this unique workspace when retest is done.
##################################################################

# exit 3 is a signal to the sw infrastructure that this template has not 
# been updated; please delete it when ready

if [ -z $SW_BLDDIR ]; then
  echo "Error: SW_BLDDIR not set!"
  exit 1
else
  cd $SW_BLDDIR
fi

if [ -z $SW_ENVFILE ]; then
  ### Set Environment (do not remove this line only change what is in between)
  . ${MODULESHOME}/init/ksh
  . ${SW_BLDDIR}/remodule
  ### End Environment (do not remove this line only change what is in between)
else
  . $SW_ENVFILE
fi

############################## app specific section
#  
set -o verbose
#clear out status file since re-testing
rm -f status 

#-- Use one of the following template: in-place test or test with batch job

cp /lustre/medusa/proj/scicomp/nodeImbalanceTest/* ${SW_WORKDIR}

cd ${SW_WORKDIR}

cat > ${PACKAGE}.pbs << EOF
#!/bin/bash
#PBS -N ${PACKAGE}
#PBS -j oe
#PBS -l nodes=2,walltime=5:00

set -o verbose
cd \$PBS_O_WORKDIR

export PATH=${SW_BLDDIR}/bin:\$PATH

mpirun -np 1 ./NodeImbalance_Beacon_Intel \
  | tee -a ${SW_BLDDIR}/.running > NodeImbalance.out 

if [ \$? -eq 0 ]; then
  echo "verified" > ${SW_BLDDIR}/status
else
  echo "unverified" > ${SW_BLDDIR}/status
fi;

/sw/cs300_centos6.6/python/2.7.11/centos6.7_gnu4.4.7/bin/python \
CollectResults.py NodeImbalance.out Beacon_NodeImbalance_Test \
| tee -a ${SW_BLDDIR}/.running

JOBID=\`echo \$PBS_JOBID | cut -d "." -f1 \`
chmod 775 ${SW_BLDDIR}/status
rm ${SW_BLDDIR}/.running
cat ${PACKAGE}.o\${JOBID} >> ${SW_BLDDIR}/test.log
cat ${PACKAGE}.log >> ${SW_BLDDIR}/test.log
chmod 664 ${SW_BLDDIR}/test.log
EOF

#submit job and touch .running file - marker to infrastructure that
qsub ${PACKAGE}.pbs 2>&1 > ${SW_BLDDIR}/.running

# qsub returns 0 on successful job launch, so if failure return 1
if [ $? -ne 0 ]; then
  echo "Error submitting job"
  cat ${SW_BLDDIR}/.running
  rm -f ${SW_BLDDIR}/.running
  exit 1
else
  echo "Job submitted"
  cat ${SW_BLDDIR}/.running
  exit 2
fi

cd ../

############################### if this far, return 0
exit 0
